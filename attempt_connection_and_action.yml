---
# Set default response to be returned if nothing else works
- name: "Initialize tower workflow variables"
  set_fact:
    exec_success: false
    exec_changed: false
    exec_rc: 1
    exec_message: "Execution failed."

# Set default timeout value for connectivity check
- set_fact:
    time_wait: 600
  when: time_wait is undefined

# Check connectivity to the host
- name: Check connectivity to the target host
  wait_for_connection:
    sleep: "{{ (time_wait | int) }}"
    timeout: "{{ (time_wait | int) }}"
  register: target_connection
  ignore_errors: true

# No connection to server. Return code 3001
- name: Block of diagnose - failed to connect
  block:
    - name: "set fact - connection failed"
      set_fact:
        exec_success: false
        exec_changed: false
        exec_rc: 3001
        exec_message: |
          - "Failed to connect to the target
            within {{ target_connection['elapsed'] }} seconds."
          - "{{ target_connection['msg'] }}"
  when: target_connection is failed and target_connection['elapsed'] is defined

# If connection is successful, run this code
- name: Connected to the target
  block:
  
    # Run shell script to get value
    - name: Run command to check agent up
      shell:
        cmd: ping -c 10 8.8.8.8
        # cmd: ./emctl status agent
        # home path can take from /etc/oragchomelist 
        # /opt/oracle/agent/agent_inst
        chdir: /tmp/
      register: shell_output

    # Output response from shell above
    - debug:
        msg: "{{ shell_output }}"

    # If agent heart beat status IS OK, return these closure codes
    - name: "initialize tower workflow variables"
      set_fact:
        exec_success: false
        exec_changed: false
        exec_rc: 1
        exec_message: |
          "The agent heartbeat was successful. No action to be carried out. Ticket closed automatically"
          ""
          "Agent status:"
          "{{ shell_output.stdout }}"
          ""
          "Elapsed time from connection: '{{ target_connection['elapsed'] | default('') }}'"
      when:
        - shell_output.stdout[10] | default('') is search('Ok')
        # - '"Heartbeat Status" in shell_output.stdout[10] | default("")'
      
    # If agent heart beat status IS NOT OK, return these closure codes
    - name: "initialize tower workflow variables"
      set_fact:
        exec_success: false
        exec_changed: false
        exec_rc: 1
        exec_message: |
          "The agent heartbeat was unsuccessful. Human action is required to resolve this issue"
          ""
          "Agent Status:"
          "'{{ shell_output.stdout }}'"
          ""
          "Elapsed time from connection: '{{ target_connection['elapsed'] | default('') }}'"
      when:
        # - shell_output.stdout[10] | default('') is not search('Ok')
        - not "Ok" in shell_output.stdout[10] | default('')
  when: target_connection is succeeded

# Return debug information to assist with fault finding
- debug:
    msg: |
      Return codes
      exec_success: '{{ exec_success }}'
      exec_changed: '{{ exec_changed }}'
      exec_rc: '{{ exec_rc }}'
      exec_message: '{{ exec_message }}'"
    
      Agent Status (Will be blank if not run):
      '{{ shelloutput.stdout | default('') }}'
      
      Elapsed time from connection: '{{ target_connection['elapsed'] | default('') }}'
    
